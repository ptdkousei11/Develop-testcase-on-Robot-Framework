<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.11.3 on win32)" generated="20230414 16:05:44.352" rpa="false" schemaversion="3">
<suite id="s1" name="Ex2" source="d:\ptdat-batch40\Develop-testcase-on-Robot-Framework\ex2.robot">
<kw name="Open Connection And Log In" type="SETUP">
<kw name="Open Connection" library="SSHLibrary">
<arg>${HOST}</arg>
<arg>timeout=30</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20230414 16:05:45.140" endtime="20230414 16:05:45.140"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20230414 16:05:45.141" level="INFO">Logging into '10.91.0.62:22' as 'root'.</msg>
<msg timestamp="20230414 16:05:53.609" level="INFO">Read output:</msg>
<status status="PASS" starttime="20230414 16:05:45.140" endtime="20230414 16:05:53.609"/>
</kw>
<status status="PASS" starttime="20230414 16:05:45.139" endtime="20230414 16:05:53.610"/>
</kw>
<test id="s1-t1" name="Test" line="18">
<kw name="Read Until" library="SSHLibrary">
<arg>\#</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20230414 16:06:06.654" level="INFO">Last login: Fri Apr 14 05:04:11 2023 from 10.250.193.189

******************************************************
*                                                    *
*          Ribbon from Sonus DSC                     *
*          Diameter and SS7 Signaling                *
*          23.0.0 (nb20230315) OS 7.9.11             *
*                                                    *
******************************************************
*                                                    *
*          Hostname lab62slot2                       *
*          System IP   10.91.0.62                    *
*                                                    *
*          Management web interface:                 *
*          https://10.91.0.62:443                    *
*                                                    *
******************************************************

[root@lab62slot2 ~]#</msg>
<status status="PASS" starttime="20230414 16:05:53.611" endtime="20230414 16:06:06.654"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>telnet localhost 6669</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20230414 16:06:06.981" level="INFO">telnet localhost 6669</msg>
<status status="PASS" starttime="20230414 16:06:06.656" endtime="20230414 16:06:06.981"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>PTI_TL1&gt;</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20230414 16:06:07.047" level="INFO">Trying ::1...
Connected to localhost.
Escape character is '^]'.
PTI_TL1&gt;</msg>
<msg timestamp="20230414 16:06:07.047" level="INFO">${output} = Trying ::1...
Connected to localhost.
Escape character is '^]'.
PTI_TL1&gt;</msg>
<status status="PASS" starttime="20230414 16:06:06.981" endtime="20230414 16:06:07.047"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230414 16:06:07.048" endtime="20230414 16:06:07.050"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>act-user::root:::y6U&amp;i8o9;</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20230414 16:06:07.384" level="INFO">act-user::root:::y6U&amp;i8o9;</msg>
<status status="PASS" starttime="20230414 16:06:07.051" endtime="20230414 16:06:07.384"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>PTI_TL1&gt;</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20230414 16:06:07.402" level="INFO">RSP:lab62slot2,
	:act-user::COMPLD;
PTI_TL1&gt;</msg>
<msg timestamp="20230414 16:06:07.402" level="INFO">${output} = 	RSP:lab62slot2,
	:act-user::COMPLD;
PTI_TL1&gt;</msg>
<status status="PASS" starttime="20230414 16:06:07.385" endtime="20230414 16:06:07.402"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230414 16:06:07.403" endtime="20230414 16:06:07.404"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>ADD-GWST-ALWTT::7-0-0:[CTAG]::EPR=STOP:::NP=0,NAI=0,PC_ROUTING=5.4.5;</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20230414 16:06:07.733" level="INFO">ADD-GWST-ALWTT::7-0-0:[CTAG]::EPR=STOP:::NP=0,NAI=0,PC_ROUTING=5.4.5;</msg>
<status status="PASS" starttime="20230414 16:06:07.406" endtime="20230414 16:06:07.733"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>PTI_TL1&gt;</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20230414 16:06:07.889" level="INFO">RSP:lab62slot2,
	:ADD-GWST-ALWTT:CTAG:DENIED,SAAS
	:"Object Already Exists";
PTI_TL1&gt;</msg>
<msg timestamp="20230414 16:06:07.889" level="INFO">${output} = 	RSP:lab62slot2,
	:ADD-GWST-ALWTT:CTAG:DENIED,SAAS
	:"Object Already Exists";
PTI_TL1&gt;</msg>
<status status="PASS" starttime="20230414 16:06:07.734" endtime="20230414 16:06:07.889"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230414 16:06:07.890" endtime="20230414 16:06:07.892"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>VFY-GWST-ALWTT::7-0-0;</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20230414 16:06:08.220" level="INFO">VFY-GWST-ALWTT::7-0-0;</msg>
<status status="PASS" starttime="20230414 16:06:07.896" endtime="20230414 16:06:08.220"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>PTI_TL1&gt;</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20230414 16:06:08.765" level="INFO">RSP:lab62slot2,
	:VFY-GWST-ALWTT::COMPLD
	::7-0-0:NP=0,NAI=0,REMARK=/**/,NEXT_TABLE=NOT APPLICABLE,NEXT_EPR=/*STOP*/,NEXT_STEP=STOP,PC_ROUTING=/*5.4.5*/,MSU_TRACING=DISABLED,SCREEN_TEST_MODE=DISABLED,
;
PTI_TL1&gt;</msg>
<msg timestamp="20230414 16:06:08.765" level="INFO">${output} = 	RSP:lab62slot2,
	:VFY-GWST-ALWTT::COMPLD
	::7-0-0:NP=0,NAI=0,REMARK=/**/,NEXT_TABLE=NOT APPLICABLE,NEXT_EPR=/*STOP*/,NEXT_STEP=STOP,PC_ROUTING=/*5.4.5*/,MSU_TRACING=DISABLED,SCREEN_TEST_MODE=DISABL...</msg>
<status status="PASS" starttime="20230414 16:06:08.221" endtime="20230414 16:06:08.765"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230414 16:06:08.766" endtime="20230414 16:06:08.768"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>DLT-GWST-ALWTT::7-0-0:[CTAG];</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20230414 16:06:09.099" level="INFO">DLT-GWST-ALWTT::7-0-0:[CTAG];</msg>
<status status="PASS" starttime="20230414 16:06:08.770" endtime="20230414 16:06:09.099"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>PTI_TL1&gt;</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20230414 16:06:09.229" level="INFO">RSP:lab62slot2,
	:DLT-GWST-ALWTT:CTAG:COMPLD;
PTI_TL1&gt;</msg>
<msg timestamp="20230414 16:06:09.229" level="INFO">${output} = 	RSP:lab62slot2,
	:DLT-GWST-ALWTT:CTAG:COMPLD;
PTI_TL1&gt;</msg>
<status status="PASS" starttime="20230414 16:06:09.100" endtime="20230414 16:06:09.229"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230414 16:06:09.231" endtime="20230414 16:06:09.233"/>
</kw>
<status status="PASS" starttime="20230414 16:05:53.610" endtime="20230414 16:06:09.235"/>
</test>
<kw name="Close All Connections" library="SSHLibrary" type="TEARDOWN">
<doc>Closes all open connections.</doc>
<status status="PASS" starttime="20230414 16:06:09.239" endtime="20230414 16:06:09.240"/>
</kw>
<doc>Exercise 2</doc>
<status status="PASS" starttime="20230414 16:05:44.359" endtime="20230414 16:06:09.240"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Ex2">Ex2</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
